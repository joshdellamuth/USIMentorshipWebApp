@using USIMentorshipWebApp.Models
@using USIMentorshipWebApp.Data
@inject DialogService DialogService
@inject SessionService sessionService;

<RadzenButton Variant="Variant.Outlined" Click=@ShowFullProfile Style="font-size:12px" Text="Full Profile" />

@code {
    [CascadingParameter]
    //must have this property for the cascading dropdown
    public User Mentor { get; set; }

    public async Task ShowFullProfile()
    {
        var roles = sessionService.GetUserRoles(Mentor);
        // if their role contains mentor display this one 
        if (roles.Any(role => role.RoleName == "Mentor"))
        {
            await DialogService.OpenAsync<FullProfileDialog>($"Mentor {Mentor.FirstName} {Mentor.LastName}",
                new Dictionary<string, object>() { { "Mentor", Mentor } },
                // can configure the dropdown to be resizable and dragable (commented out)
                new DialogOptions() { Width = "700px", CloseDialogOnOverlayClick = true /* Resizable = true, Draggable = true */ });
        }

        if (roles.Any(role => role.RoleName == "Mentee"))
        {
            await DialogService.OpenAsync<FullProfileDialog>($"Mentee {Mentor.FirstName} {Mentor.LastName}",
                new Dictionary<string, object>() { { "Mentor", Mentor } },
                // can configure the dropdown to be resizable and dragable (commented out)
                new DialogOptions() { Width = "700px", CloseDialogOnOverlayClick = true /* Resizable = true, Draggable = true */ });
        }

    //if their role contains mentee display this one
    }
}
