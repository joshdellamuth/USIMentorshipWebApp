@using USIMentorshipWebApp.Models
@using USIMentorshipWebApp.Data
@inject DialogService DialogService
@inject UserService userService
@inject SessionService sessionService
@inject RequestService requestService


@* Align Items centered the elements in the middle of the popup *@
<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center">
    <RadzenImage Path=@Mentor.ProfilePicutre Style="width: 180px; height: 120px; border-radius: 50%;" />
    <RadzenButton Click="@SendMentorshipRequest" Variant="Variant.Outlined" Text="Send Request" Style="width: 120px" />
</RadzenStack>

@code {
    //must have this property for the cascading dropdown
    [Parameter]
    public User Mentor { get; set; }

    // used for session
    List<Role> userRoles;
    User loggedInUser;

    public async Task SendMentorshipRequest()
    {
        loggedInUser = sessionService.SessionUser;
        userRoles = sessionService.Roles;

        // close the dialog
        DialogService.Close();

        // make a request with the method in the request service, passing in the correct parameters
        await requestService.RequestOnePersonMatch(loggedInUser, Mentor);

    }
}
