@using USIMentorshipWebApp.Models
@using USIMentorshipWebApp.Data
@inject DialogService DialogService
@inject UserService userservice

@* Align Items centered the elements in the middle of the popup *@
<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center">
    <RadzenImage Path=@Mentor.ProfilePicutre Style="width: 180px; height: 180px; border-radius: 50%;" />
    <div class="our-column mb-2">
        <label>Mentorship Length in <br />Semesters:</label>
        <RadzenDropDown @bind-Value=@selectedMentorshipLength Data=@mentorshipLengths Style="max-width:160px;" />
    </div>
    <RadzenButton Click="@SendMentorshipRequest" Variant="Variant.Outlined" Text="Send Request" Style="width: 120px" />
</RadzenStack>

@code {
    //must have this property for the cascading dropdown
    [Parameter]
    public User Mentor { get; set; }

    public string? selectedMentorshipLength;
    List<string> mentorshipLengths = new List<string> { "1", "2", "3", "4" };


    public void SendMentorshipRequest()
    {
        UserService _userService = new UserService();
        RequestService _requestService = new RequestService();

        // close the dialog
        DialogService.Close();

        // get an example mentee until sessions are setup
        User? exampleMentee = _userService.GetExampleMenteeUser();

        if (selectedMentorshipLength != null)
        {
            //convert the selectedMentorshipLength from string to int
            int IntegerSelectedMentorshipLength = int.Parse(selectedMentorshipLength);

            // make a request with the method in the request service, passing in the correct parameters
            _requestService.RequestOnePersonMatch(exampleMentee, Mentor, IntegerSelectedMentorshipLength);
        }

    }
}
