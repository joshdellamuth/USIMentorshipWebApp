@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject UserService userService
@inject SessionService sessionService
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Models
@using System.Linq;
@using USIMentorshipWebApp.Shared.FullProfileInfo;
@using USIMentorshipWebApp.Shared.RequestMentorship;

@*******************Approved Requests For Mentees******************@
<body>
    <h5 style="color:forestgreen">Approved Requests</h5>
    @if (requestsList != null)
    {
        @foreach (int user in requestsList)
        {
            <CascadingValue Value="@user">
                <RequestsResultCardMentee></RequestsResultCardMentee>
            </CascadingValue>
        }
    }
</body>

@*******************Pending Requests For Mentees******************@
<body>
    <h5 style="color:dodgerblue">Pending Requests</h5>
    @if (pendingList != null)
    {
        @foreach (int user in pendingList)
        {
            <CascadingValue Value="@user">
                <RequestsResultCardMentee></RequestsResultCardMentee>
            </CascadingValue>
        }
    }
</body>

@*******************Not sure this one is staying******************@
<body>
    <h5 style="color:grey">Past Requests</h5>
    @if (declinedList != null)
    {
        @foreach (int user in declinedList)
        {
            <CascadingValue Value="@user">
                <RequestsResultCardMentee></RequestsResultCardMentee>
            </CascadingValue>
        }
    }
</body>

@code {

    List<Role> userRoles;
    User loggedInUser;
    private UsiMentorshipApplicationContext _context = new UsiMentorshipApplicationContext();
    List<int> pendingList = new List<int>(); // Initialize pendingList
    List<int> declinedList = new List<int>(); // Initialize declinedList
    List<int> requestsList = new List<int>(); // Initialize requestsLis
    List<User> userList = new List<User>();
    public int? matchId;

    protected override async void OnInitialized()
    {
        // get all of the users
        userList = await userService.GetUsers();

        loggedInUser = sessionService.SessionUser;
        userRoles = sessionService.Roles;

        matchId = _context.UserMatches
                  .Where(ur => ur.UserId == loggedInUser.UserId)
                      .Select(ur => ur.MatchId)
                      .FirstOrDefault();
        foreach (User user in userList)
        {
            int? matchedId = _context.UserMatches
                  .Where(ur => ur.UserId == user.UserId)
                      .Select(ur => ur.MatchId)
                      .FirstOrDefault();
            string? status = _context.Matches
                  .Where(ur => ur.MatchId == matchedId)
                      .Select(ur => ur.Status)
                      .FirstOrDefault();
            if (user.UserId != loggedInUser.UserId && matchedId == matchId)
            {
                if (status == "Pending")
                {
                    pendingList?.Add(user.UserId);
                }
                else if (status == "Declined")
                {
                    declinedList?.Add(user.UserId);
                }
                else if (status == "Approved")
                {
                    requestsList?.Add(user.UserId);
                }
            }
        }
    }

}
