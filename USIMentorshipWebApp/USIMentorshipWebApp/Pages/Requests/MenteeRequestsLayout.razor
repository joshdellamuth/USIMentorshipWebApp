@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject UserService userService
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Models
@using System.Linq;
@using USIMentorshipWebApp.Shared.FullProfileInfo;
@using USIMentorshipWebApp.Shared.RequestMentorship;

@*******************Approved Requests For Mentees******************@
<body>
    <h5 style="color:forestgreen">Approved Requests</h5>
    @if (requestsList != null)
    {
        <CascadingValue Value="@requestsList">
            <RequestsResultCard3></RequestsResultCard3>
    </CascadingValue>
    }
</body>

@*******************Pending Requests For Mentees******************@
<body>
    <h5 style="color:dodgerblue">Pending Requests</h5>
    @if (pendingList != null)
    {
        <CascadingValue Value="@pendingList">
            <RequestsResultCard3></RequestsResultCard3>
    </CascadingValue>
    }
</body>

@*******************Not sure this one is staying******************@
<body>
    <h5 style="color:grey">Past Requests</h5>
    @if (declinedList != null)
    {
        <CascadingValue Value="@declinedList">
            <RequestsResultCard3></RequestsResultCard3>
    </CascadingValue>
    }
</body>

@code {

    [CascadingParameter]
    int userMenteeId { get; set; }

    User userMentee = new User();
    private UsiMentorshipApplicationContext _context = new UsiMentorshipApplicationContext();
    List<int> pendingList = new List<int>(); // Initialize pendingList
    List<int> declinedList = new List<int>(); // Initialize declinedList
    List<int> requestsList = new List<int>(); // Initialize requestsLis    //need to figure out why it keeps throwing a null exception!
    public List<User> userList;
    public int? matchId;

    protected override async void OnInitialized()
    {
        // userList = _context.Users.ToList();
        // foreach (User user in userList)
        // {
        //     if (user.UserId == userMenteeId)
        //     {
        //         userMentee = user;
        //     }

        // }
        userMentee = await userService.GetExampleMenteeUser();

        matchId = _context.UserMatches
                  .Where(ur => ur.UserId == userMentee.UserId)
                      .Select(ur => ur.MatchId)
                      .FirstOrDefault();
        foreach (User user in userList)
        {
            int? matchedId = _context.UserMatches
                  .Where(ur => ur.UserId == user.UserId)
                      .Select(ur => ur.MatchId)
                      .FirstOrDefault();
            string? status = _context.Matches
                  .Where(ur => ur.MatchId == matchedId)
                      .Select(ur => ur.Status)
                      .FirstOrDefault();
            if (user.UserId != userMentee.UserId && matchedId == matchId)
            {
                if (status == "Pending")
                {
                    pendingList?.Add(user.UserId);
                }
                else if (status == "Declined")
                {
                    declinedList?.Add(user.UserId);
                }
                else if (status == "Approved")
                {
                    requestsList?.Add(user.UserId);
                }
            }
        }
    }

}
