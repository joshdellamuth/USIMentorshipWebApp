@inject NavigationManager NavigationManager
@inject DialogService DialogService
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Shared.FullProfileInfo;
@using USIMentorshipWebApp.Shared.RequestMentorship;

@*************Pending Requests For Mentors*********@
<body>
    <h3 style="color:dodgerblue"><b>Pending Requests</b></h3>
    @if (pending == 1)
    {
    <CascadingValue Value="@Mentee">
            <RequestsResultCard1></RequestsResultCard1>
    </CascadingValue>
    }
</body>

@**@

@*************Approved Requests For Mentors*********@
<body>
    <h3 style="color:forestgreen"><b>Approved Requests</b></h3>
    <CascadingValue Value="@Mentee">
        <RequestsResultCard2></RequestsResultCard2>
    </CascadingValue>
</body>

@*************Denied Requests For Mentors*********@
<body>
    <h3 style="color:grey"><b>Passed Requests</b></h3>
    <CascadingValue Value="@Mentee">
        <RequestsResultCard2></RequestsResultCard2>
    </CascadingValue>
</body>

@code {
    [CascadingParameter]
    public User Mentee { get; set; }

    int pending = 1;

    void LoadRequests()
    {
        foreach (User user in UserData.users) //This will be from a list of mentees they have requests from connected to their profile, not UserData.users
        {
            // <div class="column">
            //     <img src="images/man1-profile-picture.png" width="120px" height="120px" alt="Sean Paul profile picture">
            // </div>
            // <div class="column" style="min-width:400px">
            //     <b>Sean Paul</b>
            //     <div>Field: Computer Science</div>
            //     <div>Current Position: Software Developer</div>
            //     <div>Previous Major(s): Computer Science</div>
            // </div>
            // <div class="column" style="width:400px">
            //     About: I have worked as a remote software developer for Google for 20 years. I have lived in Evansville my whole life and I'm excited to continue helping students in this area.
            // </div>
        }
    }

    void Accept()
    {
        
    }
    void Decline(){}
}
