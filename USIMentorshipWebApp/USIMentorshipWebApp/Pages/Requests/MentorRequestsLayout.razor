@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject UserService userService
@inject SessionService sessionService
@inject RequestService requestService
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Models
@using System.Linq;
@using USIMentorshipWebApp.Shared.FullProfileInfo;
@using USIMentorshipWebApp.Shared.RequestMentorship;

@*************Pending Requests For Mentors*********@
<h3 style="color:dodgerblue"><b>Pending:</b></h3>
<div class="row rz-p-2" style="justify-content:center;">
    @if (pendingRequestsDisplay != null)
    {
        @foreach (MatchRequestDisplayCardObject displayObject in approvedRequestsDisplay)
        {
            <CascadingValue Value="@displayObject">
                <RequestsResultCardMentorPending></RequestsResultCardMentorPending>
            </CascadingValue>
        }
    }
    else
    {
        <label>You have no approved requests.</label>
    }
</div>

@**@

@*************Approved Requests For Mentors*********@
<h3 style="color:forestgreen"><b>Approved:</b></h3>
<div class="row rz-p-2" style="justify-content:center;">
    @if (approvedRequestsDisplay != null)
    {
        @foreach (MatchRequestDisplayCardObject displayObject in approvedRequestsDisplay)
        {
            <CascadingValue Value="@displayObject">
                <RequestsResultCardMentorDecApp></RequestsResultCardMentorDecApp>
            </CascadingValue>
        }
    }
    else
    {
        <label>You have no approved requests.</label>
    }
</div>

@*************Denied Requests For Mentors*********@
<h3 style="color:grey"><b>Dismissed:</b></h3>
<div class="row rz-p-3" style="justify-content:center;">
    @if (declinedRequestsDisplay != null)
    {
        @foreach (MatchRequestDisplayCardObject displayObject in declinedRequestsDisplay)
        {
            <CascadingValue Value="@displayObject">
                <RequestsResultCardMentorDecApp></RequestsResultCardMentorDecApp>
            </CascadingValue>
        }
    }
    else
    {
        <label>You have no dismissed requests.</label>
    }
</div>

@code {
    List<Role>? userRoles;
    User? loggedInUser;

    private UsiMentorshipApplicationContext _context = new UsiMentorshipApplicationContext();
    List<Match>? declinedMatches; // Initialize pendingList
    List<Match>? pendingMatches; // Initialize declinedList
    List<Match>? approvedMatches; // Initialize requestsLis

    List<MatchRequestDisplayCardObject>? approvedRequestsDisplay;
    List<MatchRequestDisplayCardObject>? pendingRequestsDisplay;
    List<MatchRequestDisplayCardObject>? declinedRequestsDisplay;


    protected override async Task OnInitializedAsync()
    {
        loggedInUser = sessionService.SessionUser;
        userRoles = sessionService.Roles;

        approvedRequestsDisplay = await requestService.GetMatchRequestDisplayCards(loggedInUser.UserId, "Approved");
        pendingRequestsDisplay = await requestService.GetMatchRequestDisplayCards(loggedInUser.UserId, "Pending");
        declinedRequestsDisplay = await requestService.GetMatchRequestDisplayCards(loggedInUser.UserId, "Declined");
    }
}
