@page "/admin-portal"
@layout MainLayout
@inject SessionService sessionService
@inject NavigationManager NavigationManager
@using USIMentorshipWebApp.Data
@using USIMentorshipWebApp.Models
@using USIMentorshipWebApp.Pages.Admin
@using Radzen
@using Radzen.Blazor

<PageTitle>Admin Portal - USI Mentorship Program</PageTitle>

<h1>Admin Portal</h1>

<RadzenTabs TabPosition="@TabPosition.Top" @bind-SelectedIndex=@selectedIndex>
    <Tabs>
        @* USERS TAB *@
        <RadzenTabsItem Text="Users">
            <UsersTable></UsersTable>
        </RadzenTabsItem>

        <RadzenTabsItem Text="UserDetails">
            <UserDetailsTable />
        </RadzenTabsItem>

        @* MATCHES TAB *@
        <RadzenTabsItem Text="Matches">
            <MatchesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="UserMatches">
            <UserMatchesTable />
        </RadzenTabsItem>

        @* CHATS TAB *@
        <RadzenTabsItem Text="MatchCommunicationDetails">
            <MatchCommunicationDetailsTable/>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Roles">
            <RolesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Roles">
            <RolesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="UserRoles">
            <UserRolesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Schools">
            <SchoolsTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="JobTitles">
            <JobTitlesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Industries">
            <IndustriesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Countries">
            <CountriesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="States">
            <StatesTable />
        </RadzenTabsItem>

        <RadzenTabsItem Text="Cities">
            <CitiesTable />
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {
    List<Role> userRoles;
    User? loggedInUser;

    TabPosition tabPosition = TabPosition.Top;
    int selectedIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = sessionService.SessionUser;
        if (loggedInUser == null)
        {
            NavigationManager.NavigateTo("/");
        }
        userRoles = sessionService.Roles;

        await base.OnInitializedAsync();
    }
}
