@page "/CreateNewPassword"

@using USIMentorshipWebApp.Data;

@inject UserService UserService
@inject PasswordService PasswordService
@inject SessionService sessionService
@inject NavigationManager NavigationManager

<h3>Create New Password</h3>

<EditForm Model="@this" OnValidSubmit="UpdatePassword">
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="email" />
    </div>
    <div class="form-group">
        <label for="newPassword">New Password:</label>
        <InputText id="newPassword" type="password" class="form-control" @bind-Value="newPassword" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="confirmPassword" />
    </div>
    <button type="submit" class="btn btn-success">Update Password</button>
</EditForm>

@if (updateMessage != null)
{
    <div class="alert alert-info">@updateMessage</div>
}

@code {
    LoginModel loginModel = new LoginModel();

    private string email;
    private string newPassword;
    private string confirmPassword;
    private string updateMessage;

    private async Task UpdatePassword()
    {
        if (string.IsNullOrEmpty(email))
        {
            updateMessage = "Email is required.";
            return;
        }

        if (newPassword != confirmPassword)
        {
            updateMessage = "Passwords do not match. Please try again.";
            return;
        }

        if (string.IsNullOrEmpty(newPassword) || newPassword.Length < 6) // Example: Password length validation
        {
            updateMessage = "Password must be at least 6 characters long.";
            return;
        }

        var result = await PasswordService.UpdateUserPassword(email, newPassword);
        if (result)
        {
            updateMessage = "Password updated successfully.";
            var user = UserService.GetUserByEmail(loginModel.Email);
            sessionService.Login(user);
            NavigationManager.NavigateTo("/mentor-match"); // Redirect to a relevant page
        }
        else
        {
            updateMessage = "Error updating password. Please try again.";
        }
    }
}
