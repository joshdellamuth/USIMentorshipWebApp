@page "/mentor-registration"
@layout NotLoggedInLayout

@inject NavigationManager NavigationManager
@inject DialogService DialogService
@using USIMentorshipWebApp.Models;
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Shared.Dropdowns;

<PageTitle>Mentor Sign Up - USI Mentorship Program</PageTitle>

<div class="default-margin">
    <h1>Sign up as a Mentor</h1>
    <h3>General Information:</h3>
    @* FIRSTNAME, LASTNAME *@
    <RadzenRow class="mb-4 mt-4" Gap="25">
        <RadzenFormField Text="First Name:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value=@inputtedFirstName />
        </RadzenFormField>

        <RadzenFormField Text="Last Name:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedLastName" />
        </RadzenFormField>
    </RadzenRow>

    @* EMAIL, PHONE NUMBER *@
    <RadzenRow class="mb-4" Gap="25">
        <RadzenFormField Text="Email:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedEmail" />
        </RadzenFormField>

        <RadzenFormField Text="Phone Number:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedPhoneNumber" />
        </RadzenFormField>
    </RadzenRow>

    @* LINKEDIN *@
    <RadzenRow class="mb-4" Gap="25">
        <RadzenFormField Text="LinkedIn Profile URL:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedLinkedInProfileURL" />
        </RadzenFormField>
    </RadzenRow>

    @* UPLOAD PROFILE PICTURE *@
    <RadzenRow class="mb-4">
        <RadzenUpload Url="upload/single" ChooseText="Upload Profile Picture" Style="width:180px; text-align:center;" Accept="image/*"></RadzenUpload>
    </RadzenRow>

    @* SCHOOL, MAJOR, MINOR, GRADUATION YEAR *@
    <h3>Education Information:</h3>
    <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
        <div class="our-column mb-2">
            <label>School:</label>
            <RadzenDropDown @bind-SearchText=@schoolsSearchText @bind-Value=@inputtedSchool
                            AllowFiltering="true" Data=@schools FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
                            AllowClear="true" Style="max-width:190px;" />
        </div>

        <RadzenFormField Text="Major:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value=@inputtedMajor />
        </RadzenFormField>

        <RadzenFormField Text="Minor:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedMinor" />
        </RadzenFormField>

        <div class="our-column mb-2">
            <label>Graduation Date:</label>
            <RadzenDatePicker @bind-Value=@inputtedGraduationYear ShowDays=false DateFormat="MM/yyyy" CurrentDateChanged=@OnCurrentDateChanged Name="DatePickerYearMonth" />
        </div>
    </RadzenRow>

    @* INDUSTRY, CURRENT POSITION, COMPANY, BUSINESS LOCATION, *@
    <h3>Job and Industry Information:</h3>
    <RadzenRow class="mb-4" AlignItems="AlignItems.Center" Gap="25">
        <div class="our-column mb-2">
            <label>Industry:</label>
            <RadzenDropDown @bind-SearchText=@industriesSearchText @bind-Value=@inputtedIndustry
                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
                            Data=@industries AllowClear="true" Style="max-width:190px;" />
        </div>

        <div class="our-column mb-2">
            <label>Current Position:</label>
            <RadzenDropDown @bind-SearchText=@jobTitlesSearchText @bind-Value=@inputtedJobTitle
                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data=@jobTitles AllowClear="true" Style="max-width:190px;" />
        </div>
    </RadzenRow>

    <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
        <RadzenFormField Text="Company:" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenTextBox @bind-Value="@inputtedCompany" />
        </RadzenFormField>
    </RadzenRow>

    <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
        <BusinessLocationDropdown @ref="businessLocationDropdown" />
    </RadzenRow>

    @* BIRTHDATE, SELF-INTRODUCTION, MENTEES PER SEMESTER *@
    <h3>Further Profile Info</h3>
    <h6>Some of this information will be used in your profile for students to see</h6>
    <RadzenRow class="mb-4 mt-4" Gap="25" AlignItems="AlignItems.Center">
        <div class="our-column">
            <RadzenLabel Text="Birthdate:" Style="margin-right: 4px; vertical-align: middle;" />
            <RadzenDatePicker @bind-Value=@inputtedBirthdate ShowCalendarWeek DateFormat="MM/dd/yyyy" Min="DateTime.Today.AddYears(-110)" Max="DateTime.Today.AddYears(-18)"  />
        </div>
    </RadzenRow>

    <div class="our-column mb-2">
        <label>Gender:</label>
        <RadzenDropDown @bind-Value=@inputtedGender Data=@genders Style="max-width:160px;" />
    </div>

    <RadzenRow class="mb-4 mt-4" Gap="25">
        <div class="our-column">
            <label>Self-Introduction</label>
             <RadzenTextArea @bind-Value=@inputtedSelfIntroduction Cols="55" Rows="6" aria-label=Self-Introduction: />
        </div>
    </RadzenRow>

    <RadzenRow class="mb-4 mt-4" Gap="25">
        <div class="our-column mb-2">
            <label>Mentees Per Semester:</label>
            <RadzenDropDown @bind-Value=@inputtedMenteesPerSemester Data=@MenteesPerSemesterOptions Style="max-width:160px;" />
            <label>Mentees will not see this preference.</label>
        </div>
    </RadzenRow>

    @* PASSWORD, CONFIRM PASSWORD *@
    <h3>Create a Password</h3>
    <RadzenRow class="mb-4 mt-4" Gap="25">
        <RadzenFormField Text="Password" AllowFloatingLabel="false" Variant=Variant.Flat>
            <RadzenPassword @bind-Value="@inputtedPassword" />
        </RadzenFormField>

        <RadzenFormField Text="Confirm Password" AllowFloatingLabel="false" Variant=Variant.Flat>
             <RadzenPassword @bind-Value="@inputtedPassword" />
        </RadzenFormField>
    </RadzenRow>

    @* REGISTER, BACK TO LOGIN *@
    <RadzenRow>
        <RadzenButton Style="width:100px; font-size:14px;" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Secondary" Click=@RegisterUser Text="Register" />
        <RadzenButton Style="width:100px; font-size:14px;" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Secondary" Click=@GoToLogin Text="Back To Login" />
    </RadzenRow>
</div>

@code {
    BusinessLocationDropdown businessLocationDropdown;

    RegistrationDataService _registrationDataService = new RegistrationDataService();

    string? inputtedFirstName;
    string? inputtedLastName;
    string? inputtedEmail;
    string? inputtedMajor;
    string? inputtedMinor;
    string? inputtedPassword;
    string? inputtedPasswordConfirmed;
    string? inputtedPhoneNumber;
    string? inputtedLinkedInProfileURL;
    int? inputtedMenteesPerSemester;
    DateTime? inputtedBirthdate;
    string? inputtedJobTitle;
    string? inputtedCompany;

    // set to USA till we have other country support
    string? inputtedBusinessCountry = "USA";
    string? inputtedBusinessState;
    string? inputtedBusinessCity;
    string? inputtedCompanyWebsite;
    string? inputtedSelfIntroduction;
    DateTime? inputtedGraduationYear;
    string? inputtedGender;

    private UserService _userService = new UserService();

    void RegisterUser(MouseEventArgs args)
    {
        // Hash the password
        string hashedPassword = _userService.HashPassword(inputtedPassword);

        User user = new User
        {
            FirstName = inputtedFirstName,
            LastName = inputtedLastName,
            PhoneNumber = inputtedPhoneNumber,
            EmailAddress = inputtedEmail,
            Password = inputtedPassword,
            ProfilePicutre = "profilePic.jpg",
            LinkedInLink = inputtedLinkedInProfileURL,
            Bio = inputtedSelfIntroduction,
            Status = "Active",
            Major = inputtedMajor,
            Minor = inputtedMinor,
            Industry = inputtedIndustry,
            Company = inputtedCompany,
            CurrentPosition = inputtedJobTitle,
            DateOfBirth = inputtedBirthdate,
            GraduationYear = inputtedGraduationYear,
            BusinessCountry = inputtedBusinessCountry,
            // use the registration data service methods to grab the State and city from the location component
            BusinessState = _registrationDataService.GetStateByCode(businessLocationDropdown.stateSelected).StateName,
            BusinessCity = _registrationDataService.GetCityById(businessLocationDropdown.citySelected).CityName,
            Gender = inputtedGender,
            School = inputtedSchool,
            MenteesPerSemester = inputtedMenteesPerSemester
        };

        // add the user by specifying the user to add and the role to give them
        _userService.AddUser(user, "Mentor");

        // go to the next page after making the user
        NavigationManager.NavigateTo("/mentor-match");
    }

    // INDUSTRIES NEED TO COME FROM DATABASE AND BE OTHER OPTIONS
    public List<string> industries;
    public string inputtedIndustry;
    public string industriesSearchText;

    public List<string> jobTitles;
    public string jobTitlesSearchText;

    public List<string> schools;
    public string inputtedSchool;
    public string schoolsSearchText;

    // options for gender
    public List<string> genders = new List<string> { "Male", "Female", "Other" };

    // options for mentees 
    public List<int> MenteesPerSemesterOptions = new List<int> { 1, 2, 3, 4, 5 };

    // graduation year current date changed and for the birthdate changed
    void OnCurrentDateChanged(DateTime args)
    {
        inputtedGraduationYear = new DateTime(args.Year, args.Month, 1);
        inputtedBirthdate = new DateTime(args.Year, args.Month, 1);
    }

    protected override void OnInitialized()
    {
        // grab industries, grab job titles, grab schools
        industries = _registrationDataService.GetIndustries();
        jobTitles = _registrationDataService.GetJobTitles();
        schools = _registrationDataService.GetSchools();
    }

    void GoToNextPage(MouseEventArgs args)
    {
        // needs to make the user account by populating
        NavigationManager.NavigateTo("/mentor-match");
    }

    void GoToLogin(MouseEventArgs args)
    {
        NavigationManager.NavigateTo("/");
    }
}