@page "/mentor-registration"
@layout NotLoggedInLayout

@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject RegistrationDataService RegistrationDataService
@inject UserService UserService

@using USIMentorshipWebApp.Models;
@using USIMentorshipWebApp.Data;
@using USIMentorshipWebApp.Shared.Dropdowns;


<div class="default-margin">

        <PageTitle>Mentor Sign Up - USI Mentorship Program</PageTitle>

        <h1>Sign up as a Mentor</h1>
        <h3>General Information:</h3>


        <RadzenTemplateForm TItem="User" Data="@user" Submit="@OnSubmit">

            @* FIRSTNAME, LASTNAME *@
            <RadzenRow class="mb-4 mt-4" Gap="25">
                

                <RadzenFormField Text="First Name:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenStack Orientation="Orientation.Vertical">
                        <RadzenTextBox @bind-Value="@user.FirstName" Name="FirstName" />
                        <RadzenRequiredValidator Text="First name is required" Component="FirstName" />
                    </RadzenStack>
                </RadzenFormField>




                <RadzenFormField Text="Last Name:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.LastName" Name="LastName" />
                    <RadzenRequiredValidator Text="Last name is required" Component="LastName" />
                </RadzenFormField>
            </RadzenRow>

            @* EMAIL, PHONE NUMBER *@
            <RadzenRow class="mb-4" Gap="25">
                <RadzenFormField Text="Email:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.EmailAddress" Name="EmailAddress" />
                    <RadzenRequiredValidator Text="EmailAddress is required" Component="EmailAddress" />    
                 </RadzenFormField>

                <RadzenFormField Text="Phone Number:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.PhoneNumber" Name="PhoneNumber" />
                    <RadzenRequiredValidator Text="Phone Number is required" Component="PhoneNumber" />
                </RadzenFormField>

            </RadzenRow>

            @* LinkedIn *@
            <RadzenRow class="mb-4" Gap="25">

                <RadzenFormField Text="LinkedIn Profile URL:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.LinkedInLink" Name="LinkedIn" />
                    <RadzenRequiredValidator Text="LinkedIn is required" Component="LinkedIn" />
                </RadzenFormField>

            </RadzenRow>

            @* UPLOAD PROFILE PICTURE *@
            <RadzenRow class="mb-4">
                <RadzenUpload Url="upload/single" ChooseText="Upload Profile Picture" Style="width:180px; text-align:center;" Accept="image/*"></RadzenUpload>
            </RadzenRow>




            @* SCHOOL, MAJOR, MINOR, GRADUATION YEAR *@
            <h3>Education Information:</h3>
            <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
                <div class="our-column mb-2">
                    <label>School:</label>
                    <RadzenDropDown @bind-SearchText=@schoolsSearchText @bind-Value=@user.School
                                    AllowFiltering="true" Data=@schools FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    AllowClear="true" Style="max-width:190px;" />
                </div>

                <RadzenFormField Text="Major:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value=@user.Major />
                </RadzenFormField>

                <RadzenFormField Text="Minor:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.Minor" />
                </RadzenFormField>

                <div class="our-column mb-2">
                    <label>Graduation Date:</label>
                <RadzenDatePicker @bind-Value=@user.GraduationYear ShowCalendarWeek DateFormat="MM/dd/yyyy" Min="DateTime.Today.AddYears(-110)" Max="DateTime.Today.AddYears(30)" />
                </div>
            </RadzenRow>

            @* INDUSTRY, CURRENT POSITION, COMPANY, BUSINESS LOCATION, *@
            <h3>Job and Industry Information:</h3>
            <RadzenRow class="mb-4" AlignItems="AlignItems.Center" Gap="25">
                <div class="our-column mb-2">
                    <label>Industry:</label>
                    <RadzenDropDown @bind-SearchText=@industriesSearchText @bind-Value=@user.Industry
                                    AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    Data=@industries AllowClear="true" Style="max-width:190px;" />
                </div>

                <div class="our-column mb-2">
                    <label>Current Position:</label>
                    <RadzenDropDown @bind-SearchText=@jobTitlesSearchText @bind-Value=@user.JobTitles
                                    AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    Data=@jobTitles AllowClear="true" Style="max-width:190px;" />
                </div>
            </RadzenRow>

            <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
                <RadzenFormField Text="Company:" AllowFloatingLabel="false" Variant=Variant.Flat>
                    <RadzenTextBox @bind-Value="@user.Company" />
                </RadzenFormField>
            </RadzenRow>

            <RadzenRow class="mb-4 mt-4" AlignItems="AlignItems.Center" Gap="25">
                <BusinessLocationDropdown @ref="businessLocationDropdown" />
            </RadzenRow>


        @* BIRTHDATE, SELF-INTRODUCTION, MENTEES PER SEMESTER *@
        <h3>Further Profile Info</h3>
        <h6>Some of this information will be used in your profile for students to see</h6>
        <RadzenRow class="mb-4 mt-4" Gap="25" AlignItems="AlignItems.Center">
            <div class="our-column">
                <RadzenLabel Text="Birthdate:" Style="margin-right: 4px; vertical-align: middle;" />
                <RadzenDatePicker @bind-Value=@user.DateOfBirth ShowCalendarWeek DateFormat="MM/dd/yyyy" Min="DateTime.Today.AddYears(-110)" Max="DateTime.Today.AddYears(-18)" />
            </div>
        </RadzenRow>

        <div class="our-column mb-2">
            <label>Gender:</label>
            <RadzenDropDown @bind-Value=@user.Gender Data=@genders Style="max-width:160px;" />
        </div>

        <RadzenRow class="mb-4 mt-4" Gap="25">
            <div class="our-column">
                <label>Self-Introduction</label>
                <RadzenTextArea @bind-Value=@user.Bio Cols="55" Rows="6" aria-label=Self-Introduction: />
            </div>
        </RadzenRow>

        <RadzenRow class="mb-4 mt-4" Gap="25">
            <div class="our-column mb-2">
                <label>Mentees Per Semester:</label>
                <RadzenDropDown @bind-Value=@user.MenteesPerSemester Data=@MenteesPerSemesterOptions Style="max-width:160px;" />
                <label>Mentees will not see this preference.</label>
            </div>
        </RadzenRow>





        @* PASSWORD *@
        <RadzenRow>
            <RadzenFormField Text="Password" AllowFloatingLabel="false">
                <RadzenPassword @bind-Value="@user.Password" Name="Password" />
                <RadzenRequiredValidator Text="Password is required" Component="Password" />
                <RadzenLengthValidator Min="6" Text="Password must be at least 6 characters long" Component="Password" />
            </RadzenFormField>
        </RadzenRow>

        @* CONFIRM PASSWORD  *@
        <RadzenRow>
            <RadzenFormField Text="Confirm Password" AllowFloatingLabel="false">
                <RadzenPassword @bind-Value="@user.RepeatPassword" Name="ConfirmPassword" />
                <RadzenRequiredValidator Text="Confirming password is required" Component="ConfirmPassword" />
                <RadzenCompareValidator Text="Passwords do not match" Component="ConfirmPassword" Visible=@(!string.IsNullOrEmpty(user.RepeatPassword)) />
            </RadzenFormField>
        </RadzenRow>
       
        
            @* REGISTER, BACK TO LOGIN *@
            <RadzenRow>
                <RadzenButton Style="width:100px; font-size:14px;" Variant="Variant.Outlined" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary"  Text="Register" />
                <RadzenButton Style="width:100px; font-size:14px;" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Secondary" Click="@GoToLogin" Text="Back To Login" />
            </RadzenRow>





            @* <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" />   *@
        </RadzenTemplateForm>


</div>












@code {
    private User user = new User();
    BusinessLocationDropdown businessLocationDropdown;



    private string schoolsSearchText = "";
    private string industriesSearchText = "";// Add this line
    private string jobTitlesSearchText = "";
    private string? confirmPassword { get; set; }



    public List<string> industries = new List<string>();
    public List<string> jobTitles = new List<string>();
    public List<string> schools = new List<string>();
    // Assuming genders and menteesPerSemesterOptions are static, else fetch similarly
    public List<string> genders = new List<string> { "Male", "Female", "Other" };
    public List<int> MenteesPerSemesterOptions = new List<int> { 1, 2, 3, 4, 5 };

    protected override async Task OnInitializedAsync()
    {
        industries = await RegistrationDataService.GetIndustriesAsync();
        jobTitles = await RegistrationDataService.GetJobTitlesAsync();
        schools = await RegistrationDataService.GetSchoolsAsync();
    }


    private async Task OnSubmit()
    {
        // Check if passwords match

            // Assume AddUser is updated to handle async operation if necessary
            await UserService.AddUserAsync(user, "Mentor");
            NavigationManager.NavigateTo("/mentor-match");
        

    }

    // Removed unused variables and methods for brevity




    void GoToNextPage(MouseEventArgs args)
    {
        // needs to make the user account by populating
        NavigationManager.NavigateTo("/mentor-match");
    }

    void GoToLogin(MouseEventArgs args)
    {
        NavigationManager.NavigateTo("/");
    }

}